# Some overall notes on how this works
#
# * We smoke using the system provided latest, and custom built "oddball perls"
# The reason for not having a blanket matrix is to conserve travis resources
# as a full DBIC depchain isn't cheap
#
# * Minimum perl officially supported by DBIC is 5.8.3. This *includes* the
# basic depchain. On failure either attempt to fix it or bring it to the
# attention of the maintainer. *DO NOT* disable 5.8 testing - it is here for
# a very good reason
#
# the entire run times out after 50 minutes, or after 5 minutes without
# console output

#
# Smoke all branches except for blocked* and wip/*
branches:
  except:
    - /^wip\//
    - /^blocked/

notifications:
  email:
    recipients:
      - CPAN-CI@leporine.io
    on_success: change
    on_failure: always

# IFF this list is changed - make sure to backfill the override-addons further down too
addons:
  apt:
    packages:
      - libapp-nopaste-perl
      - net-tools
      - expect

# This is probably a net-loss for setup etc - a bare 'C' will likely fare much better
language: perl

# Currently not trying osx: https://github.com/travis-ci/travis-ci/issues/2314
os: linux

# The defaults run under the more rapid container infra. The hardware is
# actually *much* slower, but the jobs start much faster, for more info see
# https://docs.travis-ci.com/user/ci-environment/#Virtualization-environments
# Combined with 'fast_finish' this will result in an "uh-oh" email as early
# as possible
dist: precise
sudo: false
env: CLEANTEST=true

perl:
  - "5.18-extras"

matrix:
  fast_finish: true

  include:

    - perl: "5.18-extras"
      sudo: required
      # explicit new infra spec preparing for a future forced upgrade
      dist: trusty
      env:
        - CLEANTEST=false
        - POISON_ENV=true
        - DBIC_TRACE=1
        - DBIC_TRACE_PROFILE=console_monochrome
        - DBICTEST_VIA_REPLICATED=0
        - DBICTEST_VERSION_WARNS_INDISCRIMINATELY=1


###
### For the following two phases -e is *set*
###

before_install:
  # common functions for all run phases below
  #
  # this is an exporter - sourcing it is crucial
  # among other things it also sets -e
  #
  - source maint/travis-ci_scripts/common.bash

  # Sets global envvars, downloads/configures debs based on CLEANTEST
  # Sets extra DBICTEST_* envvars
  #
  # this is an exporter - sourcing it is crucial
  #
  - source maint/travis-ci_scripts/10_before_install.bash

install:
  # Build and switch to a custom perl if requested
  # Configure the perl env, preinstall some generic toolchain parts
  # Possibly poison the environment
  #
  # this is an exporter - sourcing it is crucial
  #
  - source maint/travis-ci_scripts/20_install.bash

###
### From this point on -e is *unset*, rely on travis' error handling
###
  - set +e

before_script:
  # Preinstall/install deps based on envvars/CLEANTEST
  #
  # need to invoke the after_failure script manually
  # because 'after_failure' runs only after 'script' fails
  #
  - maint/getstatus maint/travis-ci_scripts/30_before_script.bash

script:
  # Run actual tests
  #
  - maint/getstatus maint/travis-ci_scripts/40_script.bash

###
### Set -e back, work around https://github.com/travis-ci/travis-ci/issues/3533
###
  - set -e

after_success:
  # Check if we can assemble a dist properly if not in CLEANTEST
  #
  - maint/getstatus /bin/bash maint/travis-ci_scripts/50_after_success.bash || ( /bin/bash maint/travis-ci_scripts/50_after_failure.bash && /bin/false )

after_failure:
  # Final sysinfo printout on fail
  #
  - maint/getstatus maint/travis-ci_scripts/50_after_failure.bash

after_script:
  # No tasks yet
  #
  #- maint/getstatus maint/travis-ci_scripts/60_after_script.bash
